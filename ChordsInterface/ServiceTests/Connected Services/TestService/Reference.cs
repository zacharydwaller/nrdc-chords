//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceTests.TestService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TestService.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateMeasurement", ReplyAction="http://tempuri.org/IService/CreateMeasurementResponse")]
        string CreateMeasurement(ChordsInterface.Chords.Measurement measurement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateMeasurement", ReplyAction="http://tempuri.org/IService/CreateMeasurementResponse")]
        System.Threading.Tasks.Task<string> CreateMeasurementAsync(ChordsInterface.Chords.Measurement measurement);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PullSite", ReplyAction="http://tempuri.org/IService/PullSiteResponse")]
        string PullSite(int siteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PullSite", ReplyAction="http://tempuri.org/IService/PullSiteResponse")]
        System.Threading.Tasks.Task<string> PullSiteAsync(int siteID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : ServiceTests.TestService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<ServiceTests.TestService.IService>, ServiceTests.TestService.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string CreateMeasurement(ChordsInterface.Chords.Measurement measurement) {
            return base.Channel.CreateMeasurement(measurement);
        }
        
        public System.Threading.Tasks.Task<string> CreateMeasurementAsync(ChordsInterface.Chords.Measurement measurement) {
            return base.Channel.CreateMeasurementAsync(measurement);
        }
        
        public string PullSite(int siteID) {
            return base.Channel.PullSite(siteID);
        }
        
        public System.Threading.Tasks.Task<string> PullSiteAsync(int siteID) {
            return base.Channel.PullSiteAsync(siteID);
        }
    }
}
